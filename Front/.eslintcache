[{"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/index.js":"1","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/App.js":"2","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/TeachersPage.js":"3","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/UserContext.js":"4","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/Protected.js":"5","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/TeacherEdit.js":"6","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/addStudent.js":"7","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/NavBar.js":"8","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/HomePage.js":"9","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/TeachersAdd.js":"10","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/updateStudent.js":"11","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/viewStudent.js":"12","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/Sidebar.js":"13","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/LoginPage.js":"14","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/allStudents.js":"15","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/classes/viewClasses.js":"16","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/classes/allClasses.js":"17","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/sections/allSections.js":"18","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/sections/filterSections.js":"19"},{"size":240,"mtime":1611234426406,"results":"20","hashOfConfig":"21"},{"size":4745,"mtime":1611562757924,"results":"22","hashOfConfig":"21"},{"size":5676,"mtime":1611576096616,"results":"23","hashOfConfig":"21"},{"size":499,"mtime":1610719383434,"results":"24","hashOfConfig":"21"},{"size":442,"mtime":1610719383434,"results":"25","hashOfConfig":"21"},{"size":4133,"mtime":1611576018435,"results":"26","hashOfConfig":"21"},{"size":6272,"mtime":1611569621848,"results":"27","hashOfConfig":"21"},{"size":2209,"mtime":1610719383434,"results":"28","hashOfConfig":"21"},{"size":3535,"mtime":1611565115505,"results":"29","hashOfConfig":"21"},{"size":4016,"mtime":1611575995395,"results":"30","hashOfConfig":"21"},{"size":6946,"mtime":1610719788319,"results":"31","hashOfConfig":"21"},{"size":2824,"mtime":1611578037571,"results":"32","hashOfConfig":"21"},{"size":2096,"mtime":1611234426406,"results":"33","hashOfConfig":"21"},{"size":3795,"mtime":1611234426406,"results":"34","hashOfConfig":"21"},{"size":2778,"mtime":1611566921661,"results":"35","hashOfConfig":"21"},{"size":4366,"mtime":1611566944130,"results":"36","hashOfConfig":"21"},{"size":4445,"mtime":1611564665834,"results":"37","hashOfConfig":"21"},{"size":768,"mtime":1611234426406,"results":"38","hashOfConfig":"21"},{"size":790,"mtime":1611234426406,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1rb3c2l",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/index.js",[],["88","89"],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/App.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/TeachersPage.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/UserContext.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/Protected.js",["90"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst Protected = ({ isAuth: isAuth, component: Component, ...rest }) => {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={(props) => {\n\t\t\t\tif (isAuth) {\n\t\t\t\t\treturn <Component />;\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\tto={{ pathname: \"/login\", state: { from: props.location } }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}}\n\t\t></Route>\n\t);\n};\n\nexport default Protected;\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/TeacherEdit.js",["91"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, withRouter, Link } from \"react-router-dom\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst TeacherEdit = () => {\n\tconst { id } = useParams();\n\tconst [username, setUsername] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst history = useHistory();\n\tconst url = `http://localhost:8000/api/auth/teachers/${id}`;\n\tconst editUrl = `http://localhost:8000/api/auth/teachers/${id}/edit`;\n\n\tconst [error, setError] = useState();\n\n\tconst editSubmit = async (username, email, password) => {\n\t\ttry {\n\t\t\tawait axios.put(url, { username, email, password }).then((res) => {\n\t\t\t\thistory.push(\"/teachers\");\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconst res = error.response.data.message;\n\t\t\tif (res.includes(\"teachers_username_unique\")) {\n\t\t\t\tsetError(\"Username is already taken\");\n\t\t\t} else if (res.includes(\"teachers_email_unique\")) {\n\t\t\t\tsetError(\"Email is already taken\");\n\t\t\t}\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\taxios.get(editUrl).then((res) => {\n\t\t\tsetUsername(res.data.data.username);\n\t\t\tsetEmail(res.data.data.email);\n\t\t\tsetPassword(res.data.data.password);\n\t\t});\n\t}, [editUrl]);\n\treturn (\n\t\t<>\n\t\t\t<Card className=\"text-center\">\n\t\t\t\t<Card.Header>\n\t\t\t\t\t<h4>Edit Admin</h4>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Link to={\"/teachers\"}>\n\t\t\t\t\t\t<Button variant=\"warning\">Back</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={{ username: username, email: email, password: \"\" }}\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\tconst { username, email, password } = values;\n\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\teditSubmit(username, email, password);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object({\n\t\t\t\t\tusername: Yup.string()\n\t\t\t\t\t\t.max(15, \"Must be 15 characters or less\")\n\t\t\t\t\t\t.required(\"Username is required\"),\n\t\t\t\t\temail: Yup.string()\n\t\t\t\t\t\t.email(\"Invalid email address\")\n\t\t\t\t\t\t.required(\"Email is required\"),\n\t\t\t\t\tpassword: Yup.string()\n\t\t\t\t\t\t.min(3, \"Must be 3 characters or more\")\n\t\t\t\t\t\t.max(15, \"Must be 15 characters or less\")\n\t\t\t\t\t\t.required(\"Password is required\"),\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{(formik, isSubmitting) => (\n\t\t\t\t\t<Form className=\"w-50 mx-auto mt-5\">\n\t\t\t\t\t\t{error ? <p className=\"text-danger\">{error}</p> : null}\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tformik.touched.username && formik.errors.username\n\t\t\t\t\t\t\t\t\t\t? \"form-control is-invalid\"\n\t\t\t\t\t\t\t\t\t\t: \"form-control\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{formik.touched.username && formik.errors.username ? (\n\t\t\t\t\t\t\t\t<div className=\"invalid-feedback\">{formik.errors.username}</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"email\">Email Address</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t\t\t\t? \"form-control is-invalid\"\n\t\t\t\t\t\t\t\t\t\t: \"form-control\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{formik.touched.email && formik.errors.email ? (\n\t\t\t\t\t\t\t\t<div className=\"invalid-feedback\">{formik.errors.email}</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"password\">password</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tformik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t\t\t\t? \"form-control is-invalid\"\n\t\t\t\t\t\t\t\t\t\t: \"form-control\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{formik.touched.password && formik.errors.password ? (\n\t\t\t\t\t\t\t\t<div className=\"invalid-feedback\">{formik.errors.password}</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isSubmitting ? \"Please wait...\" : \"Save\"}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</>\n\t);\n};\n\nexport default withRouter(TeacherEdit);\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/addStudent.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/NavBar.js",["92"],"import React, { useState, useContext } from \"react\";\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\nimport UserContext from \"./UserContext\";\nimport styled from \"styled-components\";\nimport { ListGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport cookie from \"js-cookie\";\n\nconst Nav = styled.nav`\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 3.5rem;\n  background: #f0f2f4;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst NavBar = () => {\n  const [toggle, setToggle] = useState(false);\n  const { token, setToken } = useContext(UserContext);\n  const [hover, setHover] = useState(\"\");\n\n  return (\n    <Nav>\n      {hover ? (\n        <IoPersonCircleSharp\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n          size=\"2.5rem\"\n          color=\"#333\"\n          style={{\n            marginRight: \"2.5rem\",\n            cursor: \"pointer\",\n            filter: \"brightness(250%)\",\n          }}\n          onClick={() => {\n            setToggle(!toggle);\n          }}\n        />\n      ) : (\n        <IoPersonCircleSharp\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n          size=\"2.5rem\"\n          color=\"#333\"\n          style={{\n            marginRight: \"2.5rem\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            setToggle(!toggle);\n          }}\n        />\n      )}\n      {toggle ? (\n        <ListGroup\n          style={{ position: \"absolute\", top: \"3.5rem\", right: \"1rem\" }}\n        >\n          <ListGroup.Item\n            className=\"list-group-item-secondary\"\n            action\n            onClick={() => {\n              axios\n                .post(\"http://localhost:8000/api/auth/logout\")\n                .then((res) => {\n                  // console.log(res.data);\n                })\n                .catch((e) => {\n                  console.log(e.response);\n                });\n              cookie.remove(\"token\");\n              setToken(null);\n            }}\n          >\n            Logout\n          </ListGroup.Item>\n        </ListGroup>\n      ) : null}\n    </Nav>\n  );\n};\n\nexport default NavBar;\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/HomePage.js",["93","94","95","96"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Table } from \"react-bootstrap\";\nconst HomePage = () => {\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [Class, setClass] = useState([]);\n  const [total, setTotal] = useState(\"\");\n  const stdURL = \"http://127.0.0.1:8000/api/auth/students?section=all\";\n  const adminURL = \"http://127.0.0.1:8000/api/auth/teachers\";\n  const classURL = \"http://127.0.0.1:8000/api/auth/classes?recent=true\";\n\n  useEffect(async () => {\n    await axios.get(stdURL).then((res) => {\n      setStudents(res.data);\n    });\n  }, [stdURL]);\n\n  useEffect(async () => {\n    await axios.get(adminURL).then((res) => {\n      setAdmins(res.data);\n      setTotal(res.data.meta.total);\n    });\n  }, [adminURL]);\n\n  useEffect(async () => {\n    await axios.get(classURL).then((res) => {\n      setClasses(res.data);\n      setClass(res.data.data);\n    });\n  }, [classURL]);\n\n  // console.log(admins);\n  // console.log(classes);\n  // console.log(students);\n  const showClasses = Class.map((result) => {\n    return (\n      <tr key={result.id}>\n        <td>{result.id}</td>\n        <td>{result.className}</td>\n\n        <td>\n          <Link to={`/classes/view/${result.id}`}>\n            <Button className=\"btn btn-success\" size=\"sm\">\n              View\n            </Button>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n  const Total = () => {\n    if (classes.total === 0) {\n      return (\n        <div className=\"mt-5\" style={{ textAlign: \"center\", minWidth: 100 }}>\n          <h3>No Classes Yet !!</h3>{\" \"}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"card-deck mb-4\">\n        <div\n          className=\"card text-white bg-danger m-auto\"\n          style={{ minWidth: \"18rem\", maxWidth: \"18rem\" }}\n        >\n          <div className=\"card-header\" style={{ textAlign: \"center\" }}>\n            Number of Admins\n          </div>\n          <div className=\"card-body\" style={{ textAlign: \"center\" }}>\n            <h3 className=\"card-title m-4\">{total}</h3>\n          </div>\n        </div>\n\n        <div\n          className=\"card text-white bg-success m-auto\"\n          style={{ minWidth: \"18rem\", maxWidth: \"18rem\" }}\n        >\n          <div className=\"card-header\" style={{ textAlign: \"center\" }}>\n            Number of Classes\n          </div>\n          <div className=\"card-body\" style={{ textAlign: \"center\" }}>\n            <h3 className=\"card-title m-4\">{classes.total}</h3>\n          </div>\n        </div>\n\n        <div\n          className=\"card text-white bg-primary m-auto\"\n          style={{ minWidth: \"18rem\", maxWidth: \"18rem\" }}\n        >\n          <div className=\"card-header\" style={{ textAlign: \"center\" }}>\n            Number of Students\n          </div>\n          <div className=\"card-body\" style={{ textAlign: \"center\" }}>\n            <h3 className=\"card-title m-4\">{students.total}</h3>\n          </div>\n        </div>\n      </div>\n      <h4 className=\"ml-3\">Recent Classes:</h4>\n      {/* {showClasses} */}\n      <Table stripped=\"true\" hover className=\"mb-0\">\n        <thead>\n          <tr>\n            <th>Class ID</th>\n            <th>Class Name</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>{showClasses}</tbody>\n      </Table>\n      {Total()}\n    </>\n  );\n};\n\nexport default withRouter(HomePage);\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/TeachersAdd.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/updateStudent.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/viewStudent.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/components/Sidebar.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/LoginPage.js",["97"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserContext from \"../components/UserContext\";\nimport cookie from \"js-cookie\";\n\nconst LoginPage = ({ isAuth }) => {\n\tconst history = useHistory();\n\n\tconst { token, setToken } = useContext(UserContext);\n\n\tuseEffect(() => {\n\t\tif (isAuth) {\n\t\t\thistory.push(\"/\");\n\t\t} else {\n\t\t}\n\t}, [isAuth, history]);\n\n\tconst [error, setError] = useState();\n\n\tconst loginSubmit = async (username, password) => {\n\t\t// e.preventDefault();\n\t\tconst loginUrl = `http://localhost:8000/api/auth/login?username=${username}&password=${password}`;\n\t\tconst inOneHour = new Date(new Date().getTime() + 2000000* 60 * 1000);\n\t\ttry {\n\t\t\tawait axios.post(loginUrl).then((res) => {\n\t\t\t\tcookie.set(\"token\", res.data.access_token, {\n\t\t\t\t\texpires: inOneHour,\n\t\t\t\t});\n\t\t\t\tsetToken(res.data.access_token);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response.data);\n\t\t\tsetError(error.response.data);\n\t\t}\n\n\t\t// \t.catch((e) => {\n\t\t// \t;\n\t\t// \t});\n\t};\n\n\treturn (\n\t\t<section style={{}}>\n\t\t\t<Card\n\t\t\t\t// bg=\"dark\"\n\t\t\t\t// border=\"light\"\n\t\t\t\tstyle={{ width: \"35%\", marginTop: \"5rem\" }}\n\t\t\t\tclassName=\"mx-auto\t\"\n\t\t\t>\n\t\t\t\t<Card.Header className=\"text-center pb-5 pt-5 \">\n\t\t\t\t\t<h3>Login</h3>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\t// enableReinitialize={true}\n\t\t\t\t\t\tinitialValues={{ username: \"\", password: \"\" }}\n\t\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\t\t\tconst { username, password } = values;\n\t\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\t\tloginSubmit(username, password);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalidationSchema={Yup.object({\n\t\t\t\t\t\t\tusername: Yup.string()\n\t\t\t\t\t\t\t\t.min(3, \"Must be 3 characters or more\")\n\t\t\t\t\t\t\t\t.max(28, \"Must be 28 characters or less\")\n\t\t\t\t\t\t\t\t.required(\"Username or Email is required\"),\n\t\t\t\t\t\t\tpassword: Yup.string()\n\t\t\t\t\t\t\t\t.min(3, \"Must be 3 characters or more\")\n\t\t\t\t\t\t\t\t.max(15, \"Must be 15 characters or less\")\n\t\t\t\t\t\t\t\t.required(\"Password is required\"),\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{(formik, isSubmitting) => (\n\t\t\t\t\t\t\t<Form className=\"w-50 mx-auto mt-3\">\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t{error ? (\n\t\t\t\t\t\t\t\t\t\t<p style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t\t\t\tInvalid username or password, please try again\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.username && formik.errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? \"form-control is-invalid\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"form-control\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{formik.touched.username && formik.errors.username ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"invalid-feedback\">\n\t\t\t\t\t\t\t\t\t\t\t{formik.errors.username}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"password\">password</label>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? \"form-control is-invalid\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"form-control\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{formik.touched.password && formik.errors.password ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"invalid-feedback\">\n\t\t\t\t\t\t\t\t\t\t\t{formik.errors.password}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary mt-4\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{isSubmitting ? \"Please wait...\" : \"Login\"}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default withRouter(LoginPage);\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/students/allStudents.js",[],"/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/classes/viewClasses.js",["98","99"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams, Redirect } from \"react-router-dom\";\nimport { Form, Col, Table, Card, Button } from \"react-bootstrap\";\nimport Pagination from \"react-js-pagination\";\nimport { Confirm } from \"react-st-modal\";\n\nconst ViewClass = () => {\n  // Pagination\n  const [pagination, setPagination] = useState([]);\n  const [showPaginaton, setShowPagination] = useState(true);\n  const [pageNumber, setPageNumber] = useState(1);\n  let params = useParams();\n  const url = `http://127.0.0.1:8000/api/auth/classes/${params.id}?page=${pageNumber}`;\n\n  const [classes, setClasses] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [sectionName, setSectionName] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(url).then((res) => {\n      setClasses(res.data.data);\n      setPagination(res.data);\n    });\n  }, [url]);\n\n  const Url = `http://localhost:8000/api/auth/sections?class=${params.id}&page=${pageNumber}`;\n\n  useEffect(() => {\n    axios.get(Url).then((res) => {\n      setSections(res.data.data);\n      setPagination(res.data);\n    });\n  }, [Url]);\n\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    const url = \"http://localhost:8000/api/auth/sections/\";\n    const body = new FormData();\n    body.append(\"sectionName\", sectionName);\n    body.append(\"classID\", params.id);\n\n    axios.post(url, body).then(() => {\n      setSectionName(\"\");\n    });\n    axios.get(Url).then((res) => {\n      setSections(res.data.data);\n      setPagination(res.data);\n    });\n  };\n  const handleChange = (e) => {\n    setSectionName(e.target.value);\n  };\n\n  const deleteSection = async (id) => {\n    try {\n      const deleteUrl = `http://localhost:8000/api/auth/sections/${id}`;\n      await axios.delete(deleteUrl);\n      await axios.get(Url).then((res) => {\n        setSections(res.data.data);\n        setPagination(res.data);\n        if (res.data.total === 0) {\n          setShowPagination(false);\n        }\n      });\n    } catch (e) {\n      alert(\"Can't delete section that contains students\");\n    }\n  };\n\n  const showSections = sections.map((section) => {\n    return (\n      <tr key={section.id}>\n        <td>{section.id}</td>\n        <td>{section.sectionName}</td>\n        <td>\n          <Button\n            variant=\"danger\"\n            size=\"sm\"\n            onClick={async () => {\n              const isConfirm = await Confirm(\n                \"Are you sure you want to delete this Section ?\"\n              );\n              if (isConfirm) {\n                deleteSection(section.id);\n              }\n            }}\n          >\n            Delete\n          </Button>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <>\n      <Card className=\"text-center\">\n        <Card.Header>\n          <h4>Sections Manager</h4>\n        </Card.Header>\n        <Card.Body>\n          <Link to={\"/classes\"}>\n            <Button variant=\"warning\">Back</Button>\n          </Link>\n        </Card.Body>\n      </Card>\n\n      <Form onSubmit={onAdd}>\n        <label>\n          <h4 className=\"mt-4\">Add Section:</h4>\n        </label>\n        <Form.Row>\n          <Col xs={3}>\n            <input\n              type=\"text\"\n              className=\"form-control col-sm\"\n              onChange={handleChange}\n              placeholder=\"Section Name\"\n            />\n          </Col>\n          <Col>\n            <Button type=\"submit\" className=\"btn btn-primary\">\n              add\n            </Button>\n          </Col>\n        </Form.Row>\n      </Form>\n\n      <Table className=\"table table-hover mt-4\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>section name </th>\n            <th> </th>\n          </tr>\n        </thead>\n        <tbody>{showSections}</tbody>\n      </Table>\n\n      {showPaginaton ? (\n        <Pagination\n        // className=\"mt-5\"\n          // innerClass=\"mt-2 pagination\"\n          innerClass=\"pagination justify-content-center mt-5\"\n          activePage={pagination.current_page}\n          totalItemsCount={pagination.total}\n          itemsCountPerPage={pagination.per_page}\n          itemClass=\"page-item\"\n          linkClass=\"page-link\"\n          nextPageText=\"next\"\n          prevPageText=\"prev\"\n          onChange={(pageNumber) => {\n            setPageNumber(pageNumber);\n          }}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default ViewClass;\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/classes/allClasses.js",["100","101","102"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, Form, Col, Button, CardDeck } from \"react-bootstrap\";\n// import modalClasses from \"./modalClasses\";\n//import Modal from \"react-modal\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"react-js-pagination\";\nimport { Confirm } from \"react-st-modal\";\n\n// Modal.setAppElement(\"#root\")\nconst AllClasses = () => {\n  const [pagination, setPagination] = useState([]);\n  const [showPaginaton, setShowPagination] = useState(true);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [classes, setClasses] = useState([]);\n  const filterURL = `http://127.0.0.1:8000/api/auth/classes?page=${pageNumber}&recent=false`;\n  const [className, setClassName] = useState(\"\");\n\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    const url = \"http://localhost:8000/api/auth/classes/\";\n    const body = new FormData();\n    body.append(\"className\", className);\n    axios.post(url, body).then(() => {\n      setClassName(\"\");\n    });\n    axios.get(filterURL).then((res) => {\n      setClasses(res.data.data);\n      setPagination(res.data);\n    });\n  };\n  const handleChange = (e) => {\n    setClassName(e.target.value);\n  };\n\n  const deleteClass = async (id) => {\n    const deleteUrl = `http://localhost:8000/api/auth/classes/${id}`;\n    try {\n      await axios.delete(deleteUrl);\n      await axios.get(filterURL).then((res) => {\n        setClasses(res.data.data);\n        setPagination(res.data);\n        if (res.data.total == 0) {\n          setShowPagination(false);\n        }\n      });\n    } catch (e) {\n      alert(\"Can't delete class that contains sections.\");\n    }\n  };\n\n  useEffect(() => {\n    axios.get(filterURL).then((res) => {\n      setClasses(res.data.data);\n      setPagination(res.data);\n      console.log(pagination.total);\n      if (res.data.total == 0) {\n        setShowPagination(false);\n      }\n    });\n  }, [filterURL]);\n\n  const showClasses = classes.map((result) => {\n    return (\n      <Card\n        className=\"card bg-light mb-4\"\n        key={result.id}\n        // className=\"mb-3 \"\n        style={{ minWidth: \"18rem\", maxWidth: \"18rem\" }}\n      >\n        <Card.Header style={{ textAlign: \"center\" }}>\n          {result.className}\n        </Card.Header>\n        <Card.Body style={{ textAlign: \"center\" }}>\n          <Link to={`/classes/view/${result.id}`}>\n            <Button className=\"btn btn-success m-3\" size=\"sm\">\n              View\n            </Button>\n          </Link>\n\n          <Button\n            variant=\"danger\"\n            className=\"m-3\"\n            size=\"sm\"\n            onClick={async () => {\n              const isConfirm = await Confirm(\n                \"Are you sure you want to delete this Class ?\"\n              );\n              if (isConfirm) {\n                deleteClass(result.id);\n              }\n            }}\n          >\n            Delete\n          </Button>\n        </Card.Body>\n      </Card>\n    );\n  });\n  return (\n    <>\n      <Card className=\"text-center mb-3\">\n        <Card.Header>\n          <h4>Classes Manager</h4>\n        </Card.Header>\n      </Card>\n      <Form onSubmit={onAdd} className=\"ml-3\">\n        <label>\n          <h4>Add Class</h4>\n        </label>\n        <Form.Row>\n          <Col xs={3}>\n            <input\n              type=\"text\"\n              className=\"form-control col-sm\"\n              onChange={handleChange}\n              placeholder=\"Class Name\"\n            />\n          </Col>\n          <Col>\n            <Button type=\"submit\" className=\"btn btn-primary\">\n              add\n            </Button>\n          </Col>\n        </Form.Row>\n      </Form>\n      <div className=\"Classs-display mb-3\">\n        <h4 className=\"mt-4 ml-3\">{pagination.total} - Available Classes </h4>\n        {/*how many Classs submitted*/}\n        <CardDeck className=\"mt-3 m-auto\">{showClasses}</CardDeck>\n      </div>\n\n      {showPaginaton ? (\n        <Pagination\n          // innerClass=\"mt-2 pagination\"\n          innerClass=\"pagination justify-content-center\"\n          activePage={pagination.current_page}\n          totalItemsCount={pagination.total}\n          itemsCountPerPage={pagination.per_page}\n          itemClass=\"page-item\"\n          linkClass=\"page-link\"\n          nextPageText=\"next\"\n          prevPageText=\"prev\"\n          onChange={(pageNumber) => {\n            setPageNumber(pageNumber);\n          }}\n        />\n      ) : null}\n    </>\n  );\n};\nexport default AllClasses;\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/sections/allSections.js",["103"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import { Table } from \"react-bootstrap\";\nimport \"./sections.css\"\n\nconst AllSections = () => {\n  const sectionUrl = `http://127.0.0.1:8000/api/auth/sections?class=all`;\n  const [sections, setSections] = useState([]);\n\n  useEffect(() => {\n    axios.get(sectionUrl).then((res) => {\n      setSections(res.data);\n    });\n  }, []);\n\n  const showStections = sections.map((section) => {\n    return (\n      <option key={section.id} value={section.id}>\n        {section.sectionName}\n      </option>\n    );\n  });\n  return (\n    <select name=\"a\" className=\"btn btn- btn-info \">\n      <option  value=\"\">Select Section</option>\n      {showStections}\n    </select>\n  );\n};\nexport default AllSections;\n","/home/alishkeir/Desktop/Project 2/project2_front/lms/src/pages/sections/filterSections.js",["104"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./sections.css\";\n\nconst FilterSections = () => {\n  const sectionUrl = `http://127.0.0.1:8000/api/auth/sections?class=all`;\n  const [sections, setSections] = useState([]);\n\n  useEffect(() => {\n    axios.get(sectionUrl).then((res) => {\n      setSections(res.data);\n      // console.log(res);\n    });\n  }, []);\n\n  const showStections = sections.map((section) => {\n    return (\n      <option key={section.id} value={section.id}>\n        {section.sectionName}\n      </option>\n    );\n  });\n  return (\n    <div>\n      <select name=\"a\" className=\"btn btn- btn-warning \">\n        <option value=\"all\">All Sections</option>\n        {showStections}\n      </select>\n    </div>\n  );\n};\nexport default FilterSections;\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":22,"nodeType":"111","messageId":"112","endLine":4,"endColumn":36,"fix":"113"},{"ruleId":"114","severity":1,"message":"115","line":12,"column":9,"nodeType":"116","messageId":"117","endLine":12,"endColumn":17},{"ruleId":"114","severity":1,"message":"118","line":24,"column":11,"nodeType":"116","messageId":"117","endLine":24,"endColumn":16},{"ruleId":"114","severity":1,"message":"119","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":16,"column":13,"nodeType":"122","endLine":20,"endColumn":4},{"ruleId":"120","severity":1,"message":"121","line":22,"column":13,"nodeType":"122","endLine":27,"endColumn":4},{"ruleId":"120","severity":1,"message":"121","line":29,"column":13,"nodeType":"122","endLine":34,"endColumn":4},{"ruleId":"114","severity":1,"message":"118","line":13,"column":10,"nodeType":"116","messageId":"117","endLine":13,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":3,"column":27,"nodeType":"116","messageId":"117","endLine":3,"endColumn":35},{"ruleId":"114","severity":1,"message":"124","line":16,"column":10,"nodeType":"116","messageId":"117","endLine":16,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":44,"column":28,"nodeType":"127","messageId":"128","endLine":44,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":58,"column":26,"nodeType":"127","messageId":"128","endLine":58,"endColumn":28},{"ruleId":"120","severity":1,"message":"129","line":62,"column":6,"nodeType":"130","endLine":62,"endColumn":17,"suggestions":"131"},{"ruleId":"120","severity":1,"message":"132","line":14,"column":6,"nodeType":"130","endLine":14,"endColumn":8,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"132","line":14,"column":6,"nodeType":"130","endLine":14,"endColumn":8,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"137","text":"138"},"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'admins' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Redirect' is defined but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'pagination.total'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'sectionUrl'. Either include it or remove the dependency array.",["140"],["141"],"no-global-assign","no-unsafe-negation",[101,115],"isAuth",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},"Update the dependencies array to be: [filterURL, pagination.total]",{"range":"147","text":"148"},"Update the dependencies array to be: [sectionUrl]",{"range":"149","text":"150"},{"range":"151","text":"150"},[1919,1930],"[filterURL, pagination.total]",[403,405],"[sectionUrl]",[390,392]]